# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.jujuignore'
      - 'LICENSE'
      - '**.md'
      - 'renovate.json'
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install tox
        # TODO: Consider replacing with custom image on self-hosted runner OR pinning version
        run: python3 -m pip install tox
      - name: Run linters
        run: tox run -e lint

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - backend-integration
          - client-relation-integration
          - legacy-client-relation-integration
          - legacy-client-relation-integration-admin
          - bundle-integration
#          - read-distribution-integration
          - tls-integration
    name: ${{ matrix.tox-environments }}
    needs:
      - lint
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup operator environment
        # TODO: Replace with custom image on self-hosted runner
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          bootstrap-options: "--agent-version 2.9.46"  # renovate: latest
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - name: Run integration tests
        run: tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}'
